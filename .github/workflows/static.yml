# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs at 3 AM every day
  schedule:
    - cron: "0 3 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2

      - name: Configure conda environment
        run: |
          conda init bash
          source ~/.bashrc
          conda env create --file=environment.yaml

      - name: Run script
        run: |
          conda activate defile-env
          python src/predict.py --multirun experiment=common_buzzard,red_kite,black_kite,honey_buzzard,marsh_harrier,sparrowhawk,kestrel,osprey,hen_harrier,merlin,hobby


      - name: Copy output to another folder
        run: |
          cp -r prod/forecasts www/img

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: List files in www directory
        run: ls -R ./www
  
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./www/"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


  ssh-copy:
    needs: deploy
    runs-on: ubuntu-latest
    if: success()  # Only run if deploy job succeeds
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "$GCE_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
        env:
          GCE_SSH_KEY: ${{ secrets.GCE_SSH_KEY }}
      
      - name: SSH keyscan
        run: |
          ssh-keyscan -H "$GCE_HOST" >> ~/.ssh/known_hosts
        env:
          GCE_SSH_KEY: ${{ secrets.GCE_HOST }}

      - name: Copy files
        run: |
          scp -r prod/forecasts "$GCE_USER"@"$GCE_HOST":/home/defile/
        env:
          GCE_USER: ${{ secrets.GCE_USER }}
          GCE_HOST: ${{ secrets.GCE_HOST }}